version: '3.4'
x-shared-env: &shared-env
  OASIS_DEBUG: 1
  OASIS_URL_SUB PATH: "false"
  OASIS_CELERY_BROKER_URL: "amqp://rabbit:rabbit@broker:5672"
  #OASIS_CELERY_BROKER_URL: "redis://broker:6379"
  OASIS_SERVER_DB_HOST: server-db
  OASIS_SERVER_DB_PASS: oasis
  OASIS_SERVER_DB_USER: oasis
  OASIS_SERVER_DB_NAME: oasis
  OASIS_SERVER_DB_PORT: 5432
  OASIS_SERVER_CHANNEL_LAYER_HOST: channel-layer
  OASIS_SERVER_DB_ENGINE: django.db.backends.postgresql_psycopg2
  OASIS_CELERY_DB_ENGINE: db+postgresql+psycopg2
  OASIS_CELERY_DB_HOST: celery-db
  OASIS_CELERY_DB_PASS: password
  OASIS_CELERY_DB_USER: celery
  OASIS_CELERY_DB_NAME: celery
  OASIS_CELERY_DB_PORT: 5432
  OASIS_INPUT_GENERATION_CONTROLLER_QUEUE: task-controller
  OASIS_LOSSES_GENERATION_CONTROLLER_QUEUE: task-controller
x-volumes: &shared-volumes
  - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
services:
  server:
   restart: always
   image: coreoasis/api_server:latest
   build:
     context: .
     dockerfile: Dockerfile.api_server
   ports:
     - 8000:8000
     - 51970:51970
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
     STARTUP_RUN_MIGRATIONS: "true"
     OASIS_ADMIN_USER: admin
     OASIS_ADMIN_PASS: password
   volumes: *shared-volumes
  worker-monitor:
   restart: always
   image: coreoasis/api_server:latest
   command: [celery, -A, src.server.oasisapi.celery_app, worker, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  task-controller:
   restart: always
   image: coreoasis/api_server:latest
   command: [celery, -A, src.server.oasisapi.celery_app, worker, --loglevel=INFO, -Q, task-controller]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  celery-beat:
   restart: always
   image: coreoasis/api_server:latest
   command: [celery, -A, src.server.oasisapi.celery_app, beat, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  worker:
    restart: always
    image: coreoasis/model_worker:latest
    build:
      context: .
      dockerfile: Dockerfile.model_worker
    links:
     - celery-db
     - broker:mybroker
    environment:
     <<: *shared-env
     OASIS_MODEL_SUPPLIER_ID: OasisLMF
     OASIS_MODEL_ID: PiWind
     OASIS_MODEL_VERSION_ID: 1
     OASIS_MODEL_NUM_ANALYSIS_CHUNKS: 8
    volumes:
     - ${OASIS_MODEL_DATA_DIR:-./data/static}:/home/worker/model:rw
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  server-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=oasis
      - POSTGRES_USER=oasis
      - POSTGRES_PASSWORD=oasis
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/server-pg:/var/lib/postgresql/data:rw
    ports:
      - 33307:3306
  celery-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=celery
      - POSTGRES_USER=celery
      - POSTGRES_PASSWORD=password
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/celery-pg:/var/lib/postgresql/data:rw
    ports:
      - 33306:5432
#  broker:
#    restart: always
#    image: redis:5.0.7
#    ports:
#      - 5672:6379
  broker:
    restart: always
    image: rabbitmq:3.8.14-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - 5672:5672
      - 15672:15672
  flower:
    restart: always
    image: iserko/docker-celery-flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://rabbit:rabbit@rabbit:5672
    entrypoint:
      - flower
      - --port=5555
      - --broker_api=http://rabbit:rabbit@rabbit:15672/api/
    links:
     - celery-db
     - rabbit
  channel-layer:
    restart: always
    image: redis:5.0.7
    ports:
      - 6379:6379
