{{- $root := . -}}
{{- range $k, $worker := .Values.workers }}
{{- $name := printf "worker-%s-%s-%s-%s" $worker.supplierId $worker.modelId $worker.modelVersionId $worker.apiVersion | lower }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote }}
  labels:
    {{- include "h.labels" $root | nindent 4 }}
    {{- include "h.workerLabels" . | nindent 4 }}
  annotations:
    {{- include "h.workerDeploymentAnnotations" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ $name }}
  strategy:
    type: Recreate
  replicas: 0
  template:
    metadata:
      labels:
        app: {{ $name }}
        {{- include "h.labels" $root | nindent 8 }}
        {{- include "h.workerLabels" $worker | nindent 8 }}
      annotations:
        checksum/oasis-server: {{ toJson $root.Values.oasisServer | sha256sum }}
        checksum/model_registration: {{ $root.Files.Get "resources/model_registration.sh" | sha256sum }}
    spec:
      {{- include "h.affinity" $root | nindent 6 }}
      initContainers:
        {{- include "h.initTcpAvailabilityCheckBySecret" (list $root $root.Values.databases.broker.name $root.Values.databases.celery_db.name) | nindent 8}}
      containers:
        - image: {{ .image }}:{{ .version }}
          {{- if .imagePullPolicy }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- end }}
          name: worker
          env:
            - name: OASIS_RUN_MODE
              value: {{ $worker.apiVersion }}
            {{- include "h.modelEnvs" . | indent 12 }}
            {{- include "h.brokerVars" $root | indent 12 }}
            {{- include "h.celeryDbVars" $root | indent 12}}
{{- if eq $worker.apiVersion "v1" }}            
          startupProbe:
            exec:
              command: ["celery", "-A", "src.model_execution_worker.tasks", "inspect", "ping"]
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            exec:
              command: ["celery", "-A", "src.model_execution_worker.tasks", "inspect", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 60
            failureThreshold: 15
{{- else }}
          startupProbe:
            exec:
              command: ["celery", "-A", "src.model_execution_worker.distributed_tasks", "inspect", "ping"]
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            exec:
              command: ["celery", "-A", "src.model_execution_worker.distributed_tasks", "inspect", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 60
            failureThreshold: 15
{{- end }}
          volumeMounts:
            - name: shared-fs-persistent-storage
              mountPath: /shared-fs
            {{- range .volumes }}
            - name: {{ .name }}
              {{- if eq .source "azureFiles" }}
              subPath: {{ printf "%s/%s/%s" $worker.supplierId $worker.modelId $worker.modelVersionId }}
              {{- end }}
              mountPath: {{ .mountPath }}
            {{- end }}
{{- if .registryCredentials }}
      imagePullSecrets:
        - name: {{ .registryCredentials }}
{{- end }}
{{- if ($root.Values.azure).secretProvider }}
            - name: azure-secret-provider
              mountPath: "/mnt/azure-secrets-store"
              readOnly: true
{{- end }}
      volumes:
        - name: shared-fs-persistent-storage
{{- if (($root.Values.volumes.host).sharedFs) }}
          persistentVolumeClaim:
            claimName: {{ $root.Values.volumes.host.sharedFs.name }}
{{- else if (($root.Values.volumes.azureFiles).sharedFs) }}
{{- toYaml $root.Values.volumes.azureFiles.sharedFs | nindent 10 }}
{{- end }}
        {{- range .volumes }}
        - name: {{ .name }}
          {{- if eq .source "host" }}
          persistentVolumeClaim:
            claimName: {{ .name }}
          {{- else if eq .source "azureFiles" }}
            {{- $workerVolumeName := .name }}
            {{- range $root.Values.modelVolumes }}
              {{- if eq .name $workerVolumeName }}
          csi:
            {{- toYaml .csi | nindent 12 }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
{{- if ($root.Values.azure).secretProvider }}
        - name: azure-secret-provider
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-secret-provider"
{{- end }}
---
{{- end }}
