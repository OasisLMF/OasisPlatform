{{- $workerControllerServiceAccountName := printf "%s-worker-controller" .Release.Name | lower }}
{{- $clusterRoleBindingName := printf "%s-worker-controller-deployment-management" .Release.Name }}
{{- $clusterRoleName := printf "%s-deployment-management" .Release.Name }}
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ $workerControllerServiceAccountName }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ $clusterRoleName }}
rules:
  - apiGroups: ["*"]
    resources: ["deployments"]
    verbs: ["get", "watch", "list", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $clusterRoleBindingName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $clusterRoleName }}
subjects:
  - kind: ServiceAccount
    name: {{ $workerControllerServiceAccountName }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oasis-worker-controller
  labels:
  {{- include "h.labels" . | nindent 4}}
spec:
  selector:
    matchLabels:
      app: oasis-worker-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oasis-worker-controller
      {{- include "h.labels" . | nindent 8}}
      annotations:
        checksum/{{ .Values.oasisServer.name }}: {{ toJson .Values.oasisWebsocket | sha256sum }}
    spec:
      {{- include "h.affinity" . | nindent 6 }}
      serviceAccountName: {{ $workerControllerServiceAccountName }}
      initContainers:
      {{- include "h.initTcpAvailabilityCheckBySecret" (list . .Values.oasisWebsocket.name) | nindent 8}}
      containers:
        - image: {{ .Values.images.oasis.worker_controller.image }}:{{ .Values.images.oasis.worker_controller.version }}
          imagePullPolicy: {{ .Values.images.oasis.worker_controller.imagePullPolicy }}
          name: main
          env:
            {{- include "h.serverApiVars" . | nindent 12}}
            - name: OASIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: oasis-rest-service-account
                  key: username
            - name: OASIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oasis-rest-service-account
                  key: password
            - name: OASIS_CONTINUE_UPDATE_SCALING
              value: "{{ .Values.workerController.continueUpdateScaling }}"
            - name: OASIS_NEVER_SHUTDOWN_FIXED_WORKERS
              value: "{{ .Values.workerController.neverShutdownFixedWorkers }}"
            - name: OASIS_API_HOST
              value: {{ .Values.oasisServer.name }}
            - name: OASIS_API_PORT
              value: {{ .Values.oasisServer.port | quote }}
            - name: OASIS_WEBSOCKET_HOST
              value: {{ .Values.oasisWebsocket.name }}
            - name: OASIS_WEBSOCKET_PORT
              value: {{ .Values.oasisWebsocket.port | quote }}
            - name: OASIS_CLUSTER_NAMESPACE
              value: {{ .Release.Namespace | quote }}

            - name: OASIS_LOGLEVEL
              value: "{{ .Values.workerController.LogLevel }}"


            {{- with .Values.workerController.totalWorkerLimit }}
            - name: OASIS_TOTAL_WORKER_LIMIT
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.workerController.priority }}
              {{- if .modelsLimit }}
            - name: OASIS_PRIORITIZED_MODELS_LIMIT
              value: {{ .modelsLimit | quote }}
              {{- end }}
            {{- end }}
{{- if (.Values.azure).secretProvider }}
      volumes:
        - name: azure-secret-provider
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-secret-provider"
{{- end }}
