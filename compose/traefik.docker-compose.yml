version: "3"
services:
  server:
   restart: always
   image: coreoasis/api_server:latest
   ports:
     - 8000:8000
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_ADMIN_USER=admin
     - OASIS_ADMIN_PASS=password
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=3306
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
     - STARTUP_RUN_MIGRATIONS=true
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
   labels:
     - "traefik.enable=true"
     # /*--Production: replace "admin.localhost" with a vaild domain that is pointed at your server.--*/
      - "traefik.http.routers.django_admin.rule=Host(`django.localhost`)"
      - "traefik.http.routers.django_admin.entrypoints=websecure"
      - "traefik.http.routers.django_admin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.django_admin.service=django_admin"
      - "traefik.http.services.django_admin.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.django_admin.loadBalancer.sticky.cookie.name=django_admin"
      # /*--Uncomment them base on your needs--*/
      #- "traefik.http.services.django_admin.loadbalancer.sticky.cookie.secure=true"
      #- "traefik.http.services.django_admin.loadbalancer.sticky.cookie.httponly=true"

  worker-monitor:
   restart: always
   image: coreoasis/api_server:latest
   command: [wait-for-server, 'server:8000', celery, -A, src.server.oasisapi, worker, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=3306
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  worker:
    restart: always
    image: coreoasis/model_worker:latest
    links:
     - celery-db
     - rabbit:myrabbit
    environment:
     - OASIS_MODEL_SUPPLIER_ID=OasisLMF
     - OASIS_MODEL_ID=PiWind
     - OASIS_MODEL_VERSION_ID=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
    volumes:
     - ${OASIS_MODEL_DATA_DIR:-./data/static}:/var/oasis/:rw
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  server-db:
    restart: always
    image: mysql:8.0
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=oasis
      - MYSQL_PASSWORD=oasis
      - MYSQL_DATABASE=oasis
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/server:/var/lib/mysql/:rw
  celery-db:
    restart: always
    image: mysql
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=celery
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=celery
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/celery:/var/lib/mysql/:rw
  rabbit:
    restart: always
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - 5672:5672
      - 15672:15672
  flower:
    restart: always
    image: iserko/docker-celery-flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://rabbit:rabbit@rabbit:5672
    entrypoint:
      - flower
      - --port=5555
      - --broker_api=http://rabbit:rabbit@rabbit:15672/api/
    links:
     - celery-db
     - rabbit
  user-interface:
    image: coreoasis/oasisui_app:latest
    environment:
      - API_IP=server
      - API_PORT=8000
      - API_VERSION=v1
      - API_SHARE_FILEPATH=./downloads
      - OASIS_ENVIRONMENT=oasis_localhost
    ports:
      - 8080:3838
    labels:
      - "traefik.enable=true"
      # /*--Production: replace "app.localhost" with a vaild domain that is pointed at your server--*/
      - "traefik.http.routers.user_interface.rule=Host(`app.localhost`)"
      - "traefik.http.routers.user_interface.entrypoints=websecure"
      - "traefik.http.routers.user_interface.tls.certresolver=letsencrypt"
      - "traefik.http.routers.user_interface.service=user_interface"
      - "traefik.http.services.user_interface.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.user_interface.loadBalancer.sticky.cookie.name=user_interface"
      # /*--Uncomment them base on your needs--*/
      #- "traefik.http.services.user_interface.loadbalancer.sticky.cookie.secure=true"
      #- "traefik.http.services.user_interface.loadbalancer.sticky.cookie.httponly=true"
      #- "traefik.http.middlewares.user_interface.ratelimit.average=5"
      # /*--Production: replace "app.localhost" with the doamin that you used as Host--*/
      - "traefik.http.services.user_interface.loadbalancer.healthcheck.hostname=app.localhost"
      - "traefik.http.services.user_interface.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.user_interface.loadbalancer.healthcheck.timeout=10s"

  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config/dynamic.yml:/etc/traefik/dynamic.yml:ro
      #- ./traefik/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      # /*--Production: replace "traefik.localhost" with a vaild domain that is pointed at your server--*/
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      - "traefik.http.routers.traefik-secure.service=api@internal"
