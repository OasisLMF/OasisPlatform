version: '3'
services:
  server:
   restart: always
   image: coreoasis/api_server:latest
   build:
     context: .
     dockerfile: Dockerfile.api_server
   ports:
     - 8000:8000
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_ADMIN_USER=admin
     - OASIS_ADMIN_PASS=password 
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=5432
     - OASIS_SERVER_DB_ENGINE=django.db.backends.postgresql_psycopg2
     - OASIS_CELERY_DB_ENGINE=db+postgresql+psycopg2
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=5432
     - STARTUP_RUN_MIGRATIONS=true
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  worker-monitor:
   restart: always
   image: coreoasis/api_server:latest
   command: [wait-for-server, 'server:8000', celery, -A, src.server.oasisapi, worker, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=5432
     - OASIS_SERVER_DB_ENGINE=django.db.backends.postgresql_psycopg2
     - OASIS_CELERY_DB_ENGINE=db+postgresql+psycopg2
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=5432
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  worker:
    restart: always
    image: coreoasis/model_worker:latest
    build:
      context: .
      dockerfile: Dockerfile.model_worker
    links:
     - celery-db
     - rabbit:myrabbit
    environment:
     - OASIS_MODEL_SUPPLIER_ID=OasisLMF
     - OASIS_MODEL_ID=PiWind
     - OASIS_MODEL_VERSION_ID=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_CELERY_DB_ENGINE=db+postgresql+psycopg2
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=5432
     - OASIS_MODEL_DATA_DIRECTORY=/home/worker/model
    volumes:
     - ${OASIS_MODEL_DATA_DIR:-./data/static}:/home/worker/model:rw
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  server-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=oasis
      - POSTGRES_USER=oasis
      - POSTGRES_PASSWORD=oasis
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/server-pg:/var/lib/postgresql/data:rw
  celery-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=celery
      - POSTGRES_USER=celery
      - POSTGRES_PASSWORD=password
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/celery-pg:/var/lib/postgresql/data:rw
  rabbit:
    restart: always
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - 5672:5672
      - 15672:15672
  flower:
    restart: always
    image: iserko/docker-celery-flower 
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://rabbit:rabbit@rabbit:5672
    entrypoint:
      - flower 
      - --port=5555 
      - --broker_api=http://rabbit:rabbit@rabbit:15672/api/
    links:
     - celery-db
     - rabbit
