<<<<<<< HEAD
version: '3.4'
x-shared-env: &shared-env
  OASIS_DEBUG: 1
  OASIS_URL_SUB PATH: "false"
  OASIS_CELERY_BROKER_URL: "amqp://rabbit:rabbit@broker:5672"
  #OASIS_CELERY_BROKER_URL: "redis://broker:6379"
  OASIS_SERVER_DB_HOST: server-db
  OASIS_SERVER_DB_PASS: oasis
  OASIS_SERVER_DB_USER: oasis
  OASIS_SERVER_DB_NAME: oasis
  OASIS_SERVER_DB_PORT: 5432
  OASIS_SERVER_CHANNEL_LAYER_HOST: channel-layer
  OASIS_SERVER_DB_ENGINE: django.db.backends.postgresql_psycopg2
  OASIS_CELERY_DB_ENGINE: db+postgresql+psycopg2
  OASIS_CELERY_DB_HOST: celery-db
  OASIS_CELERY_DB_PASS: password
  OASIS_CELERY_DB_USER: celery
  OASIS_CELERY_DB_NAME: celery
  OASIS_CELERY_DB_PORT: 5432
  OASIS_INPUT_GENERATION_CONTROLLER_QUEUE: task-controller
  OASIS_LOSSES_GENERATION_CONTROLLER_QUEUE: task-controller
  OASIS_STORAGE_TYPE: S3
  OASIS_AWS_BUCKET_NAME: example-bucket 
  OASIS_AWS_S3_ENDPOINT_URL: "http://localstack-s3:4572"
  OASIS_AWS_ACCESS_KEY_ID: foobar
  OASIS_AWS_SECRET_ACCESS_KEY: foobar  
  OASIS_KEEP_RUN_DIR: "true"
x-volumes: &shared-volumes
  - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
services:
  localstack-s3:
    image: localstack/localstack:0.11.0
    environment:
      - SERVICES=s3
    ports:
      - "4567-4599:4567-4599" 
    volumes:    
      - ./tests/localstack/:/docker-entrypoint-initaws.d
  server:
   restart: always
   image: coreoasis/api_server:dev
=======
version: '3'
services:
  server:
   restart: always
   image: coreoasis/api_server:latest
>>>>>>> 303f6d9 (Github actions CI/CD update (#711))
   build:
     context: .
     dockerfile: Dockerfile.api_server
   ports:
     - 8000:8000
<<<<<<< HEAD
     - 51970:51970
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
     STARTUP_RUN_MIGRATIONS: "true"
     OASIS_ADMIN_USER: admin
     OASIS_ADMIN_PASS: password
   volumes: *shared-volumes
  worker-monitor:
   restart: always
   image: coreoasis/api_server:dev
   command: [celery, -A, src.server.oasisapi.celery_app, worker, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  task-controller:
   restart: always
   image: coreoasis/api_server:dev
   command: [celery, -A, src.server.oasisapi.celery_app, worker, --loglevel=INFO, -Q, task-controller]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  celery-beat:
   restart: always
   image: coreoasis/api_server:dev
   command: [celery, -A, src.server.oasisapi.celery_app, beat, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - broker
   environment:
     <<: *shared-env
   volumes: *shared-volumes
  worker:
    restart: always
    image: coreoasis/model_worker:dev
=======
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_ADMIN_USER=admin
     - OASIS_ADMIN_PASS=password
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=3306
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
     - STARTUP_RUN_MIGRATIONS=true
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
    # DEBUG Mounts
     - ./src/startup_server.sh:/usr/local/bin/startup
     - ./src/server/oasisapi/analyses:/var/www/oasis/src/server/oasisapi/analyses
  worker-monitor:
   restart: always
   image: coreoasis/api_server:latest
   command: [wait-for-server, 'server:8000', celery, -A, src.server.oasisapi.celery_app, worker, --loglevel=INFO]
   links:
     - server-db
     - celery-db
     - rabbit
   environment:
     - OASIS_DEBUG=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_SERVER_DB_HOST=server-db
     - OASIS_SERVER_DB_PASS=oasis
     - OASIS_SERVER_DB_USER=oasis
     - OASIS_SERVER_DB_NAME=oasis
     - OASIS_SERVER_DB_PORT=3306
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
   volumes:
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
    # DEBUG Mounts
     - ./src/startup_server.sh:/usr/local/bin/startup
     - ./src/server/oasisapi/analyses:/var/www/oasis/src/server/oasisapi/analyses
  worker:
    restart: always
    image: coreoasis/model_worker:latest
>>>>>>> 303f6d9 (Github actions CI/CD update (#711))
    build:
      context: .
      dockerfile: Dockerfile.model_worker
    links:
     - celery-db
<<<<<<< HEAD
     - broker:mybroker
    environment:
     <<: *shared-env
     OASIS_MODEL_SUPPLIER_ID: OasisLMF
     OASIS_MODEL_ID: PiWind
     OASIS_MODEL_VERSION_ID: 1
     OASIS_MODEL_NUM_ANALYSIS_CHUNKS: 8
    volumes:
     - ${OASIS_MODEL_DATA_DIR:-./data/static}:/home/worker/model:rw
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
  server-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=oasis
      - POSTGRES_USER=oasis
      - POSTGRES_PASSWORD=oasis
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/server-pg:/var/lib/postgresql/data:rw
    ports:
      - 33307:3306
  celery-db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=celery
      - POSTGRES_USER=celery
      - POSTGRES_PASSWORD=password
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/celery-pg:/var/lib/postgresql/data:rw
    ports:
      - 33306:5432
#  broker:
#    restart: always
#    image: redis:5.0.7
#    ports:
#      - 5672:6379
  broker:
=======
     - rabbit:myrabbit
    environment:
     - OASIS_MODEL_SUPPLIER_ID=OasisLMF
     - OASIS_MODEL_ID=PiWind
     - OASIS_MODEL_VERSION_ID=1
     - OASIS_RABBIT_HOST=rabbit
     - OASIS_RABBIT_PORT=5672
     - OASIS_RABBIT_USER=rabbit
     - OASIS_RABBIT_PASS=rabbit
     - OASIS_CELERY_DB_ENGINE=db+mysql+pymysql
     - OASIS_CELERY_DB_HOST=celery-db
     - OASIS_CELERY_DB_PASS=password
     - OASIS_CELERY_DB_USER=celery
     - OASIS_CELERY_DB_NAME=celery
     - OASIS_CELERY_DB_PORT=3306
     - OASIS_MODEL_DATA_DIRECTORY=/home/worker/model
    volumes:
     - /home/sam/repos/models/piwind:/home/worker/model:rw
     - ${OASIS_MEDIA_ROOT:-./docker-shared-fs}:/shared-fs:rw
    # DEBUG Mounts
     - ./src/model_execution_worker:/home/worker/src/model_execution_worker
     - ./src/startup_worker.sh:/home/worker/startup.sh

  server-db:
    restart: always
    image: mysql:8.0
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=oasis
      - MYSQL_PASSWORD=oasis
      - MYSQL_DATABASE=oasis
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/server:/var/lib/mysql/:rw
  celery-db:
    restart: always
    image: mysql
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=celery
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=celery
    volumes:
      - ${OASIS_DOCKER_DB_DATA_DIR:-./db-data}/celery:/var/lib/mysql/:rw
  rabbit:
>>>>>>> 303f6d9 (Github actions CI/CD update (#711))
    restart: always
    image: rabbitmq:3.8.14-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - 5672:5672
      - 15672:15672
  flower:
    restart: always
    image: iserko/docker-celery-flower
    ports:
      - 5555:5555
    environment:
<<<<<<< HEAD
      - CELERY_BROKER_URL=amqp://rabbit:rabbit@broker:5672
=======
      - CELERY_BROKER_URL=amqp://rabbit:rabbit@rabbit:5672
>>>>>>> 303f6d9 (Github actions CI/CD update (#711))
    entrypoint:
      - flower
      - --port=5555
      - --broker_api=http://rabbit:rabbit@rabbit:15672/api/
    links:
     - celery-db
<<<<<<< HEAD
     - broker
=======
     - rabbit
>>>>>>> 303f6d9 (Github actions CI/CD update (#711))
  channel-layer:
    restart: always
    image: redis:5.0.7
    ports:
      - 6379:6379
